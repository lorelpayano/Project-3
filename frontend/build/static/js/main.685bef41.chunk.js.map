{"version":3,"sources":["components/Home.js","components/404/NotFound.js","services/index.js","components/auth/SignUp.js","components/auth/LogIn.js","components/Profile.js","components/auth/GoogleAuth.js","components/auth/GoogleAuthLogin.js","components/Completed.js","components/Ongoing.js","components/NotStarted.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","class","Component","NotFound","baseURL","service","axios","create","withCredentials","actions","isLoggedIn","a","get","signUp","user","post","logIn","logOut","toUpload","image","SignUp","state","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","then","props","setUser","data","catch","response","console","error","onSubmit","this","type","onChange","LogIn","Profile","email","history","push","className","to","responseGoogle","log","onResponse","profileObj","password","googleId","clientId","process","REACT_APP_GOOGLEID","buttonText","onSuccess","onFailure","cookiePolicy","Completed","Ongoing","NotStarted","Footer","App","createdAt","updatedAt","_id","onClick","exact","path","render","component","GoogleAuth","GoogleAuthLogin","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.685bef41.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/Home.css'\n// import actions from '../../services/index'\n\n\nclass Home extends Component {\n\n\n  render() {\n    return (\n      <div>\n      <section class='section-home'>\n\n      </section>\n        \n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  // ? (baseURL = 'https://sheltered-dawn-07708.herokuapp.com')\n  ? (baseURL = 'window.location.origin')\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in')\n  },\n  signUp: async (user) => {\n    return await service.post('/signup', user)\n  },\n  logIn: async (user) => {\n    return await service.post('/login', user)\n  },\n  logOut: async () => {\n    return await service.get('/logout')\n  },\n  toUpload: async (image) => {\n    return await service.post('/toupload', image)\n  }\n  \n};\n\nexport default actions;\n","import React, { Component, Fragment } from 'react';\nimport actions from '../../services/index'\n\nclass SignUp extends Component {\n    state = {\n\n    } \n    handleChange = e => this.setState({[e.target.name]: e.target.value})\n\n    handleSubmit =  e => {\n        e.preventDefault()\n            actions.signUp(this.state).then(user=> {\n                this.props.setUser({...user.data})  \n            }).catch(({ response }) => console.error(response.data));\n    }\n    render() {\n        return (\n            <Fragment>\n                <h2>SignUP</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} />\n                    <input name=\"password\" type=\"password\" onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Sign Up\"/>\n                </form>\n            </Fragment>\n        );\n    }\n}\n\nexport default SignUp;","import React, { Component, Fragment } from 'react';\nimport actions from '../../services/index'\n\nclass LogIn extends Component {\n\n    state = {\n\n    } \n    handleChange = e => this.setState({[e.target.name]: e.target.value})\n\n    handleSubmit = e => {\n        e.preventDefault()\n         actions.logIn(this.state).then(user => {\n            this.props.setUser({...user.data})  \n        }).catch(({ response }) => console.error(response.data));\n    }\n    render() {\n        return (\n            <Fragment>\n                <h2>LogIn</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} />\n                    <input name=\"password\" type=\"password\" onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Log In\"/>\n                </form>\n            </Fragment>\n        );\n    }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\n\nconst Profile = (props) => {\n    if(!props.user.email){ \n        props.history.push('/log-in') \n    }   \n    return (\n        <div>\n            <div className='welcome'>\n            <h2>Welcome {props.user.name}!</h2>\n            </div>\n            <section class='section-profile'>\n                <div class='board-selector'><Link class='nav-links' to='/completed'>Completed</Link></div>\n                <div class='board-selector'><Link class='nav-links' to='/ongoing'>Ongoing</Link></div>\n                <div class='board-selector'><Link class='nav-links' to='/notstarted'>Not Started</Link></div>\n                <div class='board-selector'><Link class='nav-links' to='/createnew'>Create New</Link></div>                \n            </section>\n        </div>\n    );\n}\n\nexport default Profile;","import React from \"react\";\nimport actions from \"../../services/index\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst responseGoogle = (props) => {\n  console.log(props);\n  const onResponse = (response) => {\n    // console.log(response);\n    const user = {\n      ...response.profileObj,\n      password: response.profileObj?.googleId,\n    };\n    actions\n      .signUp(user)\n      .then((user) => {\n        props.setUser({ ...user.data });\n      })\n      .catch(({ response }) => console.error(response.data));\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLEID}\n      buttonText=\"Signup\"\n      onSuccess={onResponse}\n      onFailure={onResponse}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default responseGoogle;\n","import React from \"react\";\nimport actions from \"../../services/index\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst responseGoogle = (props) => {\n  console.log(props);\n  const onResponse = (response) => {\n    // console.log(response);\n    const user = {\n      ...response.profileObj,\n      password: response.profileObj?.googleId,\n    };\n    actions\n      .logIn(user)\n      .then((user) => {\n        props.setUser({ ...user.data });\n      })\n      .catch(({ response }) => console.error(response.data));\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLEID}\n      buttonText=\"Login\"\n      onSuccess={onResponse}\n      onFailure={onResponse}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default responseGoogle;\n","import React, { Component } from 'react';\n\nclass Completed extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nexport default Completed;","import React, { Component } from 'react';\n\nclass Ongoing extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nexport default Ongoing;","import React, { Component } from 'react';\n\nclass NotStarted extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nexport default NotStarted;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div>\n                \n\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter, Switch, Route, NavLink } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport NotFound from \"./components/404/NotFound.js\";\nimport SignUp from \"./components/auth/SignUp\";\nimport LogIn from \"./components/auth/LogIn\";\nimport Profile from \"./components/Profile\";\nimport actions from \"./services/index\";\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport GoogleAuthLogin from \"./components/auth/GoogleAuthLogin\";\nimport Completed from './components/Completed'\nimport Ongoing from './components/Ongoing'\nimport NotStarted from './components/NotStarted'\n// import Navbar from './components/Navbar'\nimport './index.css'\nimport Footer from \"./components/Footer\"\n\nclass App extends Component {\n  state = {};\n\n  async componentDidMount() {\n    let user = await actions.isLoggedIn();\n    this.setState({ ...user.data });\n    console.log(\"coolest \");\n  }\n\n  setUser = (user) => this.setState(user);\n\n  logOut = async () => {\n    let res = await actions.logOut();\n    this.setUser({ email: null, createdAt: null, updatedAt: null, _id: null }); //FIX\n  };\n\n\n\n  render() {\n    return (\n      <BrowserRouter>\n \n      {/* <Navbar /> */}\n     \n        {this.state.email}\n\n        <nav class='nav'>\n        \n          <NavLink class='nav-links' to=\"/\">Home</NavLink>\n          <NavLink class='nav-links' to=\"/about\">About</NavLink>\n          <NavLink class='nav-links' to=\"\">Get Inspired</NavLink>\n\n\n\n          {this.state.email ? (\n            <Fragment>\n              <NavLink class='nav-links' onClick={this.logOut} to=\"/\">Log Out</NavLink>\n              <NavLink class='nav-links' to=\"/profile\">Profile</NavLink>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <NavLink class='nav-links' to=\"/sign-up\">Sign Up</NavLink>\n              <NavLink class='nav-links' to=\"/log-in\">Log In</NavLink>\n            </Fragment>\n          )}\n        </nav>\n\n\n\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n          <Route exact path=\"/sign-up\" render={(props) => <SignUp {...props} setUser={this.setUser} />}/>\n          <Route exact path=\"/log-in\" render={(props) => <LogIn {...props} setUser={this.setUser} />}/>\n          <Route exact path=\"/profile\" render={(props) => <Profile {...props} user={this.state} />}/>\n\n          <Route component={NotFound} />\n          <Route exact path='/completed' render={() => <Completed />}/>\n          <Route exact path='/ongoing' render={() => <Ongoing />}/>\n          <Route exact path='/notstarted' render={() => <NotStarted />}/>\n\n        </Switch>\n        {!this.state.email && <GoogleAuth setUser={this.setUser} />}\n        {!this.state.email && <GoogleAuthLogin setUser={this.setUser} />}\n\n        {<Footer/>}\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}